#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "TUIT101"
  https://create.arduino.cc/cloud/things/yourthingid

  Arduino IoT Cloud Properties description

  The following variables are automatically generated and updated when changes are made to the Thing properties

  int counter;

  Properties which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/
#include "thingProperties.h"

int blue_led = 2; //onboard blue led

const int buttonPin = 4; //the number of the pushbutton
  
// Remote site information
const char http_site[] = ""; //your hosting site for Twilio PHP
const int http_port = 80;

// Global variables
WiFiClient client;

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 1
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();  

  // Attempt to connect to website
  if ( !getPage() ) {
    Serial.println("GET request failed");
  }
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  pinMode(blue_led, OUTPUT);
  pinMode(buttonPin, INPUT);
  
  digitalWrite(blue_led, HIGH); //off
  
  // read the input pin:
  int buttonState = digitalRead(buttonPin);
  
  if (buttonState == LOW) {
  counter = counter + 1;
  digitalWrite(blue_led, LOW); //on
  if (counter > 10)  {
    getPage();
    counter = 1;
  }
  Serial.println(counter);
  delay(1000);               // wait for a second
  }
}

void onCounterChange() {
  // Do something
}

// Perform an HTTP GET request to a remote page
bool getPage() {
  
  // Attempt to make a connection to the remote server
  if ( !client.connect(http_site, http_port) ) {
    return false;
  }
  
  // Make an HTTP GET request
  
  client.println("GET /pathtowebpage/twilio/pagename.php HTTP/1.0");
  client.print("Host: ");
  client.println(http_site);
  client.println("Connection: close");
  client.println();
  
  return true;
}
